<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for Windows (x86-64) 2016.2 (Build 730U)" ts="2016-09-30 15:49:36">
<Routine name="JDate" type="INC" timestamp="63412,52410.300579"><![CDATA[
#define MeijiStart  9862
#define TaisyouStart  26143
#define SyouwaStart  31404
#define HeiseiStart  54064

#define MeijiYear  1868
#define TaisyoYear  1912
#define SyouwaYear  1926
#define HeiseiYear  1989
#define StartYear   1
#define MeijiStartMonthDate 0101
#define MeijiEndYear 45
#define MeijiEndMonthDate 729
#define TaisyoStartMonthDate 730
#define TaisyoEndYear 15
#define TaisyoEndMonthDate 1224
#define SyouwaStartMonthDate 1225
#define SyouwaEndYear 64
#define SyouwaEndMonthDate 107
#define HeiseiStartMonthDate 108
#define MaxHeiseiYear 99

#define ShortExpression 1
#define LongExpression  2

#define ShortExpressionLength  7
#define LongExpressionLength  11

#define FormatError $System.Status.Error(4001,"Date Format Error")
#define RangeError $System.Status.Error(4002,"Date Range Error")

]]></Routine>


<Class name="Sample.JDate">
<IncludeCode>JDate</IncludeCode>
<Super>%Base</Super>
<TimeChanged>63412,56658.915318</TimeChanged>
<TimeCreated>63145,40263.832055</TimeCreated>

<Method name="LogicalToDisplay">
<ClassMethod>1</ClassMethod>
<FormalSpec>pDate:%Date,pFormat:%Integer=1,pError:%Status</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	//明治　1868/1/01 - 1912/7/30 	$h 9862 - 26143
	//大正　1912/7/30 - 1926/12/25	$h 26143 - 31404
	//昭和　1926/12/25 - 1989/1/7	$h 31404 - 54063
	//平成　1989/1/8 -				$h 54064
	//
	// 明治、大正、昭和に関しては改元日が重なっているが、その重なっている日を新元号とするケースが多いようである。
	//
	// Format 
	//     1	Gyymmdd				Gは元号を表すアルファベット
	//     2    GGyy年mm月dd日		GGは元号を表す漢字表現
	
	Set pError = $$$OK
		
	Set tDate = $Zdate(pDate,8)
	
	If (+pFormat > $$$LongExpression) || (+pFormat < $$$ShortExpression) Set pFormat = $$$ShortExpression

	If pDate < $$$MeijiStart Quit tDate  //明治より前は西暦のまま返す
	
	If (pDate > ($$$MeijiStart - 1)) && (pDate < $$$TaisyouStart) {
		//明治
		Set tYear = ..GengouYear(pDate, $$$MeijiStart)
		If (pFormat = $$$ShortExpression) {
		   Set tDate = "M"_tYear_$Extract(tDate,5,8)
		}
		Elseif (pFormat = $$$LongExpression) {
		   Set tDate = "明治"_tYear_"年"_$Extract(tDate,5,6)_"月"_$Extract(tDate,7,8)_"日"
		}
	}
	
	if (pDate > ($$$TaisyouStart - 1)) && (pDate < ($$$SyouwaStart)) {
		//大正
		set tYear = ..GengouYear(pDate, $$$TaisyouStart)
		If (pFormat = $$$ShortExpression) {
		   Set tDate = "T"_tYear_$Extract(tDate,5,8)
		}
		Elseif (pFormat = $$$LongExpression) {
		   Set tDate = "大正"_tYear_"年"_$Extract(tDate,5,6)_"月"_$Extract(tDate,7,8)_"日"
		}
	}
	
	if (pDate > ($$$SyouwaStart - 1)) && (pDate < $$$HeiseiStart) {
		//昭和
		set tYear = ..GengouYear(pDate, $$$SyouwaStart)
		If (pFormat = $$$ShortExpression) {
		   Set tDate = "S"_tYear_$Extract(tDate,5,8)
		}
		Elseif (pFormat = $$$LongExpression) {
		   Set tDate = "昭和"_tYear_"年"_$Extract(tDate,5,6)_"月"_$Extract(tDate,7,8)_"日"
		}
	}

	if (pDate >= $$$HeiseiStart) {
		//平成
		set tYear = ..GengouYear(pDate, $$$HeiseiStart)
		
		If (tYear > $$$MaxHeiseiYear) {
			Set pError = $$$RangeError
			Set tDate = "" Quit tDate
		}
		If (pFormat = $$$ShortExpression) {
		   Set tDate = "H"_tYear_$Extract(tDate,5,8)
		}
		Elseif (pFormat = $$$LongExpression) {
		   Set tDate = "平成"_tYear_"年"_$Extract(tDate,5,6)_"月"_$Extract(tDate,7,8)_"日"
		}
	}
	Quit tDate
]]></Implementation>
</Method>

<Method name="DisplayToLogical">
<ClassMethod>1</ClassMethod>
<FormalSpec>pDate:%String,pFormat:%Integer=1,pError:%Status</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	//明治　1868/1/01 - 1912/7/30 	$h 9862  - 26143
	//大正　1912/7/30 - 1926/12/25	$h 26143 - 31404
	//昭和　1926/12/25 - 1989/1/7	$h 31404 - 54063
	//平成　1989/1/8 -				$h 54064
	//
	// 明治、大正、昭和に関しては改元日が重なっているが、その重なっている日を新元号とするケースが多いようである。
  Try { 	
	Set pError = $$$OK
	Set tH = ""
	
	If (+pFormat > $$$LongExpression) || (+pFormat < $$$ShortExpression) Set pFormat = $$$ShortExpression
	
	If pDate?8N {
		Set tYear = $Extract(pDate,1,4)
		If tYear < $$$MeijiYear {
			Set tH = $ZDH(pDate,8)
			Quit
		}
		Else {
			Set pError = $$$FormatError
			Quit
		}
	}
	If (pFormat = $$$ShortExpression) {
	   Set tEra = $Extract(pDate,1)
	   Set tCheck = $Case(tEra,"M":1,"T":1,"S":1,"H":1,:0)
	}
	ElseIf (pFormat = $$$LongExpression) {
	  Set tEra = $Extract(pDate,1,2)
	  Set tCheck = $Case(tEra,"明治":2,"大正":2,"昭和":2,"平成":2,:0)
	}
	
	If 'tCheck Set pError = $$$FormatError Quit
	If (pFormat = $$$ShortExpression) {
		set tYear = $Extract(pDate,2,3)
		set tMonth = $Extract(pDate,4,5)
		set tDay = $Extract(pDate,6,7)
		If ($Length(pDate) '= $$$ShortExpressionLength) Set pError = $$$FormatError Quit
	}
	Else {
		set tYear = $Extract(pDate,3,4)
		set tMonth = $Extract(pDate,6,7)
		set tDay = $Extract(pDate,9,10)
		Set tNen = $Extract(pDate,5)
		Set tGetsu = $Extract(pDate,8)
		Set tNichi = $Extract(pDate,11)
		If ($Length(pDate) '= $$$LongExpressionLength) Set pError = $$$FormatError Quit

		If (tNen '= "年") Set pError = $$$FormatError Quit

		If (tGetsu '= "月") Set pError = $$$FormatError Quit

		If (tNichi '= "日")  Set pError = $$$FormatError Quit
	}
	
	If tYear'?2N Set pError = $$$FormatError Quit
	If tMonth'?2N Set pError = $$$FormatError Quit
	If tDay'?2N Set pError = $$$FormatError Quit

	If (+tYear = 0) Set pError = $$$FormatError Quit
	
	If (tEra = "M") || (tEra = "明治") {

		Set tYear2 = $$$MeijiYear + tYear - 1
		Set tH = $ZDH(tYear2_tMonth_tDay,8)

		If (+tYear = $$$StartYear) {
			If (+(tMonth_tDay) < $$$MeijiStartMonthDate) {
				Set pError = $$$RangeError
				Set tH = ""
			}
		}
		ElseIf (+tYear = $$$MeijiEndYear) {
			If (+(tMonth_tDay) > $$$MeijiEndMonthDate) {
				Set pError = $$$RangeError
			    Set tH = ""
			}			
		} 
		ElseIf (+tYear > $$$MeijiEndYear) {
			Set pError = $$$RangeError
			Set tH = ""
		}
	}
	If (tEra = "T") || (tEra = "大正") {

		Set tYear2 = $$$TaisyoYear + tYear - 1
		Set tH = $ZDH(tYear2_tMonth_tDay,8)

		If (+tYear = $$$StartYear) {
			If (+(tMonth_tDay) < $$$TaisyoStartMonthDate) {
				Set pError = $$$RangeError
			    Set tH = ""
			}
		}
		ElseIf (+tYear = $$$TaisyoEndYear) {
			If (+(tMonth_tDay) > $$$TaisyoEndMonthDate) {
				Set pError = $$$RangeError
				Set tH = ""
			}			
		} 
		ElseIf (+tYear > $$$TaisyoEndYear) {
			Set pError = $$$RangeError
			Set tH = ""
		}
	}
	If (tEra = "S") || (tEra = "昭和") {
		Set tYear2 = $$$SyouwaYear + tYear - 1
		Set tH = $ZDH(tYear2_tMonth_tDay,8)
		If (+tYear = $$$StartYear) {
			If (+(tMonth_tDay) < $$$SyouwaStartMonthDate) {
				Set pError = $$$RangeError
				Set tH = ""
			}
		}
		ElseIf (+tYear = $$$SyouwaEndYear) {
			If (+(tMonth_tDay) > $$$SyouwaEndMonthDate) {
				Set pError = $$$RangeError
				Set tH = ""
			}			
		} 
		ElseIf (+tYear > $$$SyouwaEndYear) {
			Set pError = $$$RangeError
			Set tH = ""
		}
	}
	If (tEra = "H") || (tEra = "平成") {
		Set tYear2 = $$$HeiseiYear + tYear - 1
		Set tH = $ZDH(tYear2_tMonth_tDay,8)
		If (+tYear = $$$StartYear) {
			If (+(tMonth_tDay) < $$$HeiseiStartMonthDate) {
				Set pError = $$$RangeError
				Set tH = ""
			}
		}
	}
  }
  Catch tE {
	  Set pError = $$$RangeError
	  Set tH = ""
  }
	Quit tH
]]></Implementation>
</Method>

<Method name="GengouYear">
<ClassMethod>1</ClassMethod>
<FormalSpec>pDate:%Date,pGengouStart:%Date</FormalSpec>
<Private>1</Private>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[ quit $Translate($Justify($extract($Zdate(pDate,8),1,4)-$Extract($Zdate(pGengouStart,8),1,4) + 1,2)," ",0)
]]></Implementation>
</Method>
</Class>


<Class name="Sample.JDateUnitTests">
<Super>%UnitTest.TestCase</Super>
<TimeChanged>63412,56830.434131</TimeChanged>
<TimeCreated>63407,43284.141423</TimeCreated>

<Method name="TestLogicalToDisplay">
<Description>
セットアップ
　テストを実行するネームスペース上に以下のグローバルを作成する
Set ^UnitTestRoot = "c:\UnitTests"
 上で設定したディレクトリは存在している必要がある。
 そのディレクトリの下にJDateというサブディレクトリを作成
 そのサブディレクトリにこのクラスをxml形式でエクスポート
do ##class(%UnitTest.Manager).DebugLoadTestSuite("JDate")
do ##class(%UnitTest.Manager).DebugRunTestCase("JDate")</Description>
<Implementation><![CDATA[
	Set tHDate = $ZDH(18671231,8)
	Set tDate = 18671231
	Do $$$AssertEquals(##class(Sample.JDate).LogicalToDisplay(tHDate,1),tDate,"Checking before Meiji 1")
	Set tHDate = $ZDH(18680101,8)
	Set tDate = "M010101"
	Do $$$AssertEquals(##class(Sample.JDate).LogicalToDisplay(tHDate,1),tDate,"Checking Meiji Start 1")	
	Set tHDate = $ZDH(19120729,8)
	Set tDate = "M450729"
	Do $$$AssertEquals(##class(Sample.JDate).LogicalToDisplay(tHDate,1),tDate,"Checking Meiji End 1")	
	Set tHDate = $ZDH(19120730,8)
	Set tDate = "T010730"
	Do $$$AssertEquals(##class(Sample.JDate).LogicalToDisplay(tHDate,1),tDate,"Checking Taisyo Start 1")	
	Set tHDate = $ZDH(19261224,8)
	Set tDate = "T151224"
	Do $$$AssertEquals(##class(Sample.JDate).LogicalToDisplay(tHDate,1),tDate,"Checking Taisyo End 1")	
	Set tHDate = $ZDH(19261225,8)
	Set tDate = "S011225"
	Do $$$AssertEquals(##class(Sample.JDate).LogicalToDisplay(tHDate,1),tDate,"Checking Syouwa Start 1")	
	Set tHDate = $ZDH(19890107,8)
	Set tDate = "S640107"
	Do $$$AssertEquals(##class(Sample.JDate).LogicalToDisplay(tHDate,1),tDate,"Checking Syouwa End 1")	
	Set tHDate = $ZDH(19890108,8)
	Set tDate = "H010108"
	Do $$$AssertEquals(##class(Sample.JDate).LogicalToDisplay(tHDate,1),tDate,"Checking Heisei Start 1")	
	Set tHDate = $ZDH(20900108,8)
	Set tDate = ""
	Do $$$AssertEquals(##class(Sample.JDate).LogicalToDisplay(tHDate,1),tDate,"Checking Heisei Range Error")

	Set tHDate = $ZDH(18671231,8)
	Set tDate = 18671231
	Do $$$AssertEquals(##class(Sample.JDate).LogicalToDisplay(tHDate,2),tDate,"Checking before Meiji 2")
	Set tHDate = $ZDH(18680101,8)
	Set tDate = "明治01年01月01日"
	Do $$$AssertEquals(##class(Sample.JDate).LogicalToDisplay(tHDate,2),tDate,"Checking Meiji Start 2")	
	Set tHDate = $ZDH(19120729,8)
	Set tDate = "明治45年07月29日"
	Do $$$AssertEquals(##class(Sample.JDate).LogicalToDisplay(tHDate,2),tDate,"Checking Meiji End 2")	
	Set tHDate = $ZDH(19120730,8)
	Set tDate = "大正01年07月30日"
	Do $$$AssertEquals(##class(Sample.JDate).LogicalToDisplay(tHDate,2),tDate,"Checking Taisyo Start 2")	
	Set tHDate = $ZDH(19261224,8)
	Set tDate = "大正15年12月24日"
	Do $$$AssertEquals(##class(Sample.JDate).LogicalToDisplay(tHDate,2),tDate,"Checking Taisyo End 2")	
	Set tHDate = $ZDH(19261225,8)
	Set tDate = "昭和01年12月25日"
	Do $$$AssertEquals(##class(Sample.JDate).LogicalToDisplay(tHDate,2),tDate,"Checking Syouwa Start 2")	
	Set tHDate = $ZDH(19890107,8)
	Set tDate = "昭和64年01月07日"
	Do $$$AssertEquals(##class(Sample.JDate).LogicalToDisplay(tHDate,2),tDate,"Checking Syouwa End 2")	
	Set tHDate = $ZDH(19890108,8)
	Set tDate = "平成01年01月08日"
	Do $$$AssertEquals(##class(Sample.JDate).LogicalToDisplay(tHDate,2),tDate,"Checking Heisei Start 2")
	Set tHDate = $ZDH(20900108,8)
	Set tDate = ""
	Do $$$AssertEquals(##class(Sample.JDate).LogicalToDisplay(tHDate,2),tDate,"Checking Heisei Range Error")
]]></Implementation>
</Method>

<Method name="TestDisplayToLogical">
<Implementation><![CDATA[
	Set tHDate = ""
	Set tDate = "18671331"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,1,.tError),tHDate,"Checking Before Meiji Format Error")	
	Set tHDate = $ZDH(18671231,8)
	Set tDate = "18671231"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,1,.tError),tHDate,"Checking Before Meiji")	
	Set tHDate = $ZDH(18680101,8)
	Set tDate = "M010101"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,1,.tError),tHDate,"Checking Meiji Start 1")	
	Set tHDate = $ZDH(19120729,8)
	Set tDate = "M450729"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,1,.tError),tHDate,"Checking Meiji End 1")	
	Set tHDate = ""
	Set tDate = "M450730"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,1,.tError),tHDate,"Checking Meiji End 1 NO GOOD")
	Set tHDate = ""
	Set tDate = "T010729"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,1,.tError),tHDate,"Checking Taisyo Start 1 NO GOOD")	
	Set tHDate = $ZDH(19120730,8)
	Set tDate = "T010730"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,1,.tError),tHDate,"Checking Taisyo Start 1")	
	Set tHDate = $ZDH(19261224,8)
	Set tDate = "T151224"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,1,.tError),tHDate,"Checking Taisyo End 1")	
	Set tHDate = ""
	Set tDate = "T151225"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,1,.tError),tHDate,"Checking Taisyo End 1 NO GOOD")	
	Set tHDate = ""
	Set tDate = "S011224"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,1,.tError),tHDate,"Checking Syouwa Start 1 NO GOOD")	
	Set tHDate = $ZDH(19261225,8)
	Set tDate = "S011225"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,1,.tError),tHDate,"Checking Syouwa Start 1")	
	Set tHDate = $ZDH(19890107,8)
	Set tDate = "S640107"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,1,.tError),tHDate,"Checking Syouwa End 1")	
	Set tHDate = ""
	Set tDate = "S640108"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,1,.tError),tHDate,"Checking Syouwa End 1 NO GOOD")	
	Set tHDate = ""
	Set tDate = "H010107"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,1,.tError),tHDate,"Checking Heisei Start 1 NO GOOD")	
	Set tHDate = $ZDH(19890108,8)
	Set tDate = "H010108"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,1,.tError),tHDate,"Checking Heisei Start 1")	

	Set tHDate = ""
	Set tDate = "19671231"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,2,.tError),tHDate,"Checking Meiji Start 2 NO GOOD")	
	Set tHDate = $ZDH(18680101,8)
	Set tDate = "明治01年01月01日"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,2,.tError),tHDate,"Checking Meiji Start 2")	
	Set tHDate = $ZDH(19120729,8)
	Set tDate = "明治45年07月29日"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,2,.tError),tHDate,"Checking Meiji End 2")	
	Set tHDate = ""
	Set tDate = "明治45年07月30日"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,1,.tError),tHDate,"Checking Meiji End 1 NO GOOD")
	Set tHDate = ""
	Set tDate = "大正01年07月29日"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,1,.tError),tHDate,"Checking Taisyo Start 1 NO GOOD")	
	Set tHDate = $ZDH(19120730,8)
	Set tDate = "大正01年07月30日"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,2,.tError),tHDate,"Checking Taisyo Start 2")	
	Set tHDate = $ZDH(19261224,8)
	Set tDate = "大正15年12月24日"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,2,.tError),tHDate,"Checking Taisyo End 2")	
	Set tHDate = ""
	Set tDate = "大正15年12月25日"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,2,.tError),tHDate,"Checking Taisyo End 2 NO GOOD")	
	Set tHDate = ""
	Set tDate = "昭和01年12月24日"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,1,.tError),tHDate,"Checking Syouwa Start 1 NO GOOD")	
	Set tHDate = $ZDH(19261225,8)
	Set tDate = "昭和01年12月25日"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,2,.tError),tHDate,"Checking Syouwa Start 2")	
	Set tHDate = $ZDH(19890107,8)
	Set tDate = "昭和64年01月07日"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,2,.tError),tHDate,"Checking Syouwa End 2")	
	Set tHDate = ""
	Set tDate = "昭和64年01月08日"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,2,.tError),tHDate,"Checking Syouwa End 2 NO GOOD")	
	Set tHDate = ""
	Set tDate = "平成01年01月07日"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,2,.tError),tHDate,"Checking Heisei Start 2 NO GOOD")	
	Set tHDate = $ZDH(19890108,8)
	Set tDate = "平成01年01月08日"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,2,.tError),tHDate,"Checking Heisei Start 2")
	Set tHDate = ""
	Set tDate = "平成01年00月00日"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,2,.tError),tHDate,"Checking Format Error 1")
	Set tHDate = ""
	Set tDate = "平成00年01月01日"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,2,.tError),tHDate,"Checking Format Error 2")
	Set tHDate = ""
	Set tDate = "平静01年01月01日"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,2,.tError),tHDate,"Checking Format Error 3")
	Set tHDate = ""
	Set tDate = "平成01念01月01日"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,2,.tError),tHDate,"Checking Format Error 4")
	Set tHDate = ""
	Set tDate = "平成01年01日01日"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,2,.tError),tHDate,"Checking Format Error 5")
	Set tHDate = ""
	Set tDate = "平成01年01月01月"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,2,.tError),tHDate,"Checking Format Error 6")
	Set tHDate = ""
	Set tDate = "平成01年01月1日"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,2,.tError),tHDate,"Checking Format Error 7")
	Set tHDate = ""
	Set tDate = "平成01年1月01日"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,2,.tError),tHDate,"Checking Format Error 8")
	Set tHDate = ""
	Set tDate = "Z011011"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,1,.tError),tHDate,"Checking Format Error 9")
	Set tHDate = ""
	Set tDate = "H11011"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,1,.tError),tHDate,"Checking Format Error 10")
	Set tHDate = ""
	Set tDate = "H11011"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,1,.tError),tHDate,"Checking Format Error 11")
	Set tHDate = ""
	Set tDate = "H1101011"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,1,.tError),tHDate,"Checking Format Error 12")
	Set tHDate = ""
	Set tDate = "平成11年01月01日1"
	Do $$$AssertEquals(##class(Sample.JDate).DisplayToLogical(tDate,2,.tError),tHDate,"Checking Format Error 13")
]]></Implementation>
</Method>
</Class>
</Export>
